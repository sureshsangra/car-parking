{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/add-parking-slot/add-parking-slot.component.ts","./src/app/add-parking-slot/add-parking-slot.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container\">\r\n    <h1>Car Parking</h1>\r\n    <hr />\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6 col-sm-3 rectangle-gray\" (click)=\"bookSlot('P1', 'elderly')\">P1</div>\r\n                <div class=\"col-6 col-sm-3 rectangle\" (click)=\"bookSlot('P2', 'general Category')\">P2</div>\r\n                <div class=\"col-6 col-sm-3 rectangle-pink\" (click)=\"bookSlot('P3', 'women')\">P3</div>\r\n                <div class=\"col-6 col-sm-3 rectangle-yellow\" (click)=\"bookSlot('P4', 'accessibility')\">P4</div>\r\n\r\n                <!-- Force next columns to break to new line at md breakpoint and up -->\r\n                <div class=\"w-100 d-none d-md-block\"></div>\r\n\r\n                <div class=\"col-12 col-sm-3 rectangle-yellow\" (click)=\"bookSlot('P5', 'accessibility')\">P5</div>\r\n                <div class=\"col-12 col-sm-3 rectangle\" (click)=\"bookSlot('P6', 'general Category')\">P6</div>\r\n                <div class=\"col-12 col-sm-3 rectangle-gray\" (click)=\"bookSlot('P7', 'elderly')\">P7</div>\r\n                <div class=\"col-12 col-sm-3 rectangle-yellow\" (click)=\"bookSlot('P8', 'accessibility')\">P8</div>\r\n                <div class=\"col-12 col-sm-3 rectangle-yellow\" *ngFor=\"let divData of boxData\">{{divData.parking_slot_no}}</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"row\"><span id=\"pinkBadge\"></span> women</div>\r\n            <div class=\"row\"><span id=\"yellowBadge\"></span> accessibility</div>\r\n            <div class=\"row\"><span id=\"grayBadge\"></span> elderly</div>\r\n            <div class=\"row\"><span id=\"whiteBadge\"></span> general Category</div>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table table-bordered table-hover\">\r\n            <thead>\r\n                <tr class=\"table-active\">\r\n                    <th>\r\n                        ID\r\n                    </th>\r\n                    <th>\r\n                        PARK SLOT NO\r\n                    </th>\r\n                    <th>\r\n                        BOOKING STATUS\r\n                    </th>\r\n                    <th>\r\n                        BOOKED BY\r\n                    </th>\r\n                    <th>\r\n                        PARKING CATAGORY\r\n                    </th>\r\n                    <th>\r\n                        BOOKING TIME AND DATE\r\n                    </th>\r\n                    <th>\r\n                        DELETE SLOT\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let item of parkingDetails; let i = index\">\r\n                    <td>{{i+1}}</td>\r\n                    <td>{{item.parking_slot_no}}</td>\r\n                    <td>{{item.booking_status}}</td>\r\n                    <td> <input type=\"text\" value=\"{{item.booked_by}}\"></td>\r\n                    <td>{{item.parking_catagory}}</td>\r\n                    <td>{{item.booking_time}}</td>\r\n                    <td><button class=\"btn btn-default\" type=\"button\" (click)=\"deleteFieldValue(i)\">Delete</button></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <app-add-parking-slot (parkingData)=\"onParkingAdded($event)\"></app-add-parking-slot>\r\n</div>","import { parseI18nMeta } from '@angular/compiler/src/render3/view/i18n/meta';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string;\n  parkingDetails: any;\n  time: string;\n  boxData: any = [];\n\n\n  constructor() {\n    this.title = \"Car-Parking\";\n    this.time = new Date().toLocaleString();\n    this.parkingDetails = []\n  }\n\n  deleteFieldValue(index: any) {\n    this.parkingDetails.splice(index, 1);\n    this.boxData.splice(index, 1);\n  }\n\n  bookSlot(slot: any, type: any) {\n    this.parkingDetails.push({\n      parking_slot_no: slot,\n      booking_status: 'Booked',\n      booked_by: \"\",\n      parking_catagory: type,\n      booking_time: this.time\n    })\n  }\n\n  onParkingAdded(parkingData: { parkingSlotNo: string, bookingStatus: string, bookedBy: string, parkingCatagory: string, bookingTime: string }) {\n    this.parkingDetails.push({\n      id: 1,\n      parking_slot_no: parkingData.parkingSlotNo,\n      booking_status: parkingData.bookingStatus,\n      booked_by: parkingData.bookedBy,\n      parking_catagory: parkingData.parkingCatagory,\n      booking_time: parkingData.bookingTime\n    })\n    \n    this.boxData = [...this.parkingDetails];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AddParkingSlotComponent } from './add-parking-slot/add-parking-slot.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddParkingSlotComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ModalDismissReasons, NgbModal} from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-parking-slot',\n  templateUrl: './add-parking-slot.component.html',\n  styleUrls: ['./add-parking-slot.component.css']\n})\nexport class AddParkingSlotComponent implements OnInit {\n  parkingSlot: string= '';\n  personName: string= '';\n  personCatagory: string= '';\n  parkingTime: string= '';\n  parkingStatus: string= '';\n  closeResult: string= '';\n  catagoryList: string[] = [\"women\", \"accessibility\", \"elderly\", \"general Category\"];\n  @Output() parkingData = new EventEmitter<{parkingSlotNo: string, bookingStatus:string, bookedBy: string, parkingCatagory: string,bookingTime: string}>();\n\n  constructor(private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n  }\n\n  open(content: any) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  onSubmit() {\n    this.parkingData.emit({\n      parkingSlotNo: this.parkingSlot,\n      bookingStatus: 'Booked',\n      bookedBy: this.personName,\n      parkingCatagory: this.personCatagory,\n      bookingTime: new Date(this.parkingTime).toLocaleString()\n    });\n    this.parkingSlot = ''\n    this.personName ='';\n    this.personCatagory = '';\n    this.parkingTime = '';\n    this.parkingStatus = '';\n    this.modalService.dismissAll(); //dismiss the modal\n  }\n\n}\n","<button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"open(content)\">ADD PARKING SLOT</button>\n\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Add Parking Slot</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form #form='ngForm' (submit)=\"onSubmit()\">\n            <div class=\"form-group\">\n                <label for=\"firstname\">Parking Slot No</label>\n                <div class=\"input-group\">\n                    <input type=\"text\" name=\"praking_slot\" class=\"form-control\" [(ngModel)]=\"parkingSlot\" required>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"firstname\">Enter your name</label>\n                <div class=\"input-group\">\n                    <input type=\"text\" name=\"name\" class=\"form-control\" [(ngModel)]=\"personName\" required>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"firstname\">Parking Catagory</label>\n                <div class=\"input-group\">\n                    <select class=\"form-select\" name=\"personCatagory\" aria-label=\"Default select example\" [(ngModel)]=\"personCatagory\" required>\n                        <option *ngFor=\"let c of catagoryList\" value=\"{{c}}\">{{c}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"firstname\">Select Date and Time</label>\n                <div class=\"input-group\">\n                    <input type=\"datetime-local\" name=\"date_time\" class=\"form-control\" [(ngModel)]=\"parkingTime\" required>\n                </div>\n            </div>\n            <div class=\"border text-center\">\n                <button data-dismiss=\"modal\" class=\"btn btn-outline-dark\" [disabled]=\"form.invalid\">Save</button>\n            </div>\n        </form>\n    </div>\n</ng-template>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}